" Leader key
let mapleader = "ñ"

if exists('$TMUX')
  let &t_SI = "\<Esc>Ptmux;\<Esc>\<Esc>]50;CursorShape=1\x7\<Esc>\\"
  let &t_EI = "\<Esc>Ptmux;\<Esc>\<Esc>]50;CursorShape=0\x7\<Esc>\\"
  " Copy to the clipboard when yankin
  set clipboard=unnamed
else
  let &t_SI = "\<Esc>]50;CursorShape=1\x7"
  let &t_EI = "\<Esc>]50;CursorShape=0\x7"
endif
"
" If the encoding is not set early then some characters
" like the one used in showbreak look weird
set encoding=utf-8
set backspace=start,eol,indent " Backpsace everywhere in insert mode
set tabstop      =2
set softtabstop  =2
set shiftwidth   =2
set expandtab
set number
set nobackup
set nowritebackup
set backupdir    =~/.vim/backup
set directory    =~/.vim/backup
set laststatus   =2
set hlsearch
set incsearch
set ignorecase
set smartcase
set equalalways
set list
set listchars-=eol:$
set listchars+=tab:..
set listchars+=trail:.
set showbreak=↪
set cursorline
set scrolloff    =10
set wildmenu
set wildmode=list:longest
set whichwrap+=<,>,h,l,[,] "http://vim.wikia.com/wiki/Automatically_wrap_left_and_right
set exrc " Execute commands in per-project .vimrc files
set secure

" Reduce timeout after <ESC> is recvd. This is only a good idea on fast links.
" Got at: https://code.google.com/p/iterm2/issues/detail?id=1322
set ttimeout
set ttimeoutlen=20
set notimeout

set nocompatible               " be iMproved
filetype off                   " required! by vundle
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()

" let Vundle manage Vundle
" required!
Plugin 'gmarik/Vundle'

" Load all the other plugins
source ~/.vim/bundles
let g:bundles_file ="~/.vim/bundles"
call vundle#end()

" Filetype
filetype plugin indent on

" Enable syntax highlight
syntax enable

" vim colorscheme for terminal
if !has("gui_running")
  color molokai
endif

" As netwr is not loaded via a bundle
" I set its config here
"let g:netrw_keepdir=0 " change the current dir to the directory you are currently browsing

" Load all the other files
source ~/.vim/vim-mappings
source ~/.vim/vim-helpers
source ~/.vim/vim-autocommands
