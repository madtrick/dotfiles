""""""""""""""""""""""""""""""""""""""""
" UI ENHANCEMENTS
""""""""""""""""""""""""""""""""""""""""
Plug 'scrooloose/nerdcommenter'
" nercommenter{{{
let g:NERDSpaceDelims = 1
"}}}
Plug 'bling/vim-airline'
" Vim-airline{{{
let g:airline#extensions#syntastic#enabled = 1

let g:airline_powerline_fonts           = 1
let g:airline#extensions#branch#enabled = 1
let g:airline_theme                     = 'badwolf_custom'

if !exists('g:airline_symbols')
  let g:airline_symbols = {}
endif
"Setting here the symbols was the only way I found to
" show the glyphs in the statusline (got at
" https://github.com/bling/vim-airline/issues/76?source=cc)
let g:airline_left_sep         = '⮀'
let g:airline_left_alt_sep     = '⮁'
let g:airline_right_sep        = '⮂'
let g:airline_right_alt_sep    = '⮃'
let g:airline_symbols.branch   = '⭠'
let g:airline_symbols.readonly = '⭤'
let g:airline_symbols.liner    = '⭡'
"}}}
Plug 'tpope/vim-vinegar'

" """"""""""""""""""""""""""""""""""""""""
" " UTILS
" """"""""""""""""""""""""""""""""""""""""
" " Plug to quickly switch between buffers
Plug '/usr/local/opt/fzf'
Plug 'junegunn/fzf.vim'
" Use GFiles instead of plain Files to avoid getting results for
" non tracked files as for example anything under `node_modules`
nnoremap <c-F> :GFiles<CR>
nnoremap W :W<CR>
let g:fzf_action = {
  \ 'ctrl-t': 'tab split',
  \ 'ctrl-x': 'split',
  \ 'ctrl-v': 'vsplit' }

" Default fzf layout
" - down / up / left / right
let g:fzf_layout = { 'down': '~40%' }

" Customize fzf colors to match your color scheme
let g:fzf_colors =
\ { 'fg':      ['fg', 'Normal'],
  \ 'bg':      ['bg', 'Normal'],
  \ 'hl':      ['fg', 'Comment'],
  \ 'fg+':     ['fg', 'CursorLine', 'CursorColumn', 'Normal'],
  \ 'bg+':     ['bg', 'CursorLine', 'CursorColumn'],
  \ 'hl+':     ['fg', 'Statement'],
  \ 'info':    ['fg', 'PreProc'],
  \ 'border':  ['fg', 'Ignore'],
  \ 'prompt':  ['fg', 'Conditional'],
  \ 'pointer': ['fg', 'Exception'],
  \ 'marker':  ['fg', 'Keyword'],
  \ 'spinner': ['fg', 'Label'],
  \ 'header':  ['fg', 'Comment'] }

Plug 'tpope/vim-surround'
" Surround:{{{
" Surround mappings
nmap <leader>" ysiw"E
nmap <leader>' ysiw'E
"}}}
Plug 'gabesoft/vim-ags'
" vim-ags:{{{
" Percentage of the window to use to display the results
let g:ags_winheight = '20'
"}}}
"Plug 'tpope/vim-jdaddy'
Plug 'blueyed/vim-diminactive'
Plug 'tpope/vim-fugitive'
Plug 'chrisbra/csv.vim'
Plug 'mhinz/vim-signify'
" vim-signify:{{{
let g:signify_vcs_list = [ 'git' ]
let g:signify_update_on_focusgained = 1

nmap <leader>gh :SignifyToggleHighlight<CR>
"}}}
Plug 'Shougo/deoplete.nvim', { 'do': ':UpdateRemotePlugins' }
let g:deoplete#enable_at_startup = 1
" Trigger autocompletion with <TAB>
inoremap <expr><tab> pumvisible() ? "\<c-n>" : "\<tab>"

" Plug 'carlitux/deoplete-ternjs', { 'do': 'npm install -g tern' }
" " Note: yats is required by nvim-typescript. It's a syntax description for TS
" " files
Plug 'HerringtonDarkholme/yats.vim'
" " Note: this plugin requires the npm package 'neovim' to be installed
" Plug 'mhartington/nvim-typescript', {'do': './install.sh'}

""""""""""""""""""""""""""""""""""""""""
" THEMES
""""""""""""""""""""""""""""""""""""""""
Plug 'sjl/badwolf'
Plug 'madtrick/solarized'
Plug 'lifepillar/vim-solarized8'
Plug 'trevordmiller/nova-vim'

"""""""""""""""""""""""""""""""""""""""
" LANGUAGES
"""""""""""""""""""""""""""""""""""""""
Plug 'vim-ruby/vim-ruby'
Plug 'jelera/vim-javascript-syntax'
Plug 'pangloss/vim-javascript'
Plug 'elzr/vim-json'
" vim-json:{{{
let g:vim_json_syntax_conceal = 0
"}}}
Plug 'mxw/vim-jsx'
" vim-jsx:{{{
let g:jsx_ext_required = 1
"}}}
Plug 'w0rp/ale'
" ale:{{{
let g:ale_set_loclist = 1
let g:ale_linters = {
\   'javascript': ['eslint'],
\   'typescript': ['tsserver', 'tslint'],
\}
let g:ale_fixers = {'typescript': ['tslint']}
let g:ale_lint_delay = 800
let g:ale_pattern_options = {
\   './node_modules/.*$': {'ale_enabled': 0},
\}
let g:ale_completion_enabled = 0
" inoremap <expr><tab> pumvisible() ? "\<c-n>" : "\<tab>"
nmap ad :ALEGoToDefinitionInTab<cr>
"}}}

Plug 'kylef/apiblueprint.vim'
Plug 'fatih/vim-go'
" vim-go:{{{
let g:go_fmt_command = "goimports"
" Disable default mapping in Plug: nmap K :GoDoc<CR>
" which conflicts with one of my custom mappings
let g:go_doc_keywordprg_enabled = 0
"}}}

""""""""""""""""""""""""""""""""""""""""
" MOTIONS
""""""""""""""""""""""""""""""""""""""""
Plug 'goldfeld/vim-seek'
" Vim-seek{{{
let g:seek_subst_disable=1
let g:seek_enable_jumps=1
"}}}

" Utils
Plug 'kana/vim-textobj-user'
Plug 'kana/vim-textobj-line'
Plug 'jiangmiao/auto-pairs'
Plug 'tpope/vim-unimpaired'

Plug 'tpope/vim-abolish'

Plug 'justinmk/vim-gtfo'
Plug 'Shougo/vimproc.vim'
Plug 'Valloric/ListToggle'

" vim:ft=vim:fdm=marker
